name: Publish prerelease

on:
  push:
    branches:
      - dev

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Set version with padded build number
        id: version
        run: |
          # Pad the run number with leading zeros (4 digits)
          PADDED_BUILD_NUMBER=$(printf "%04d" ${{ github.run_number }})
          PACKAGE_VERSION="6.0.0-prerelease.${PADDED_BUILD_NUMBER}"
          echo "package_version=${PACKAGE_VERSION}" >> "$GITHUB_OUTPUT"
          echo "Version set to $PACKAGE_VERSION"

      - name: Restore
        run: dotnet restore LiteDB.sln

      - name: Test
        timeout-minutes: 5
        run: dotnet test LiteDB.sln --configuration Release --verbosity normal --settings tests.runsettings --logger "trx;LogFileName=TestResults.trx" --logger "console;verbosity=detailed" /p:DefineConstants=TESTING

      - name: Build
        run: dotnet build LiteDB/LiteDB.csproj --configuration Release --no-restore \
          -p:Version=${{ steps.version.outputs.package_version }} \
          -p:PackageVersion=${{ steps.version.outputs.package_version }}

      - name: Pack
        run: |
          dotnet pack LiteDB/LiteDB.csproj --configuration Release --no-build -o artifacts \
           -p:PackageVersion=${{ steps.version.outputs.package_version }} \
           -p:Version=${{ steps.version.outputs.package_version }}

      - name: Publish GitHub prerelease
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.version.outputs.package_version }}
          name: LiteDB ${{ steps.version.outputs.package_version }}
          generate_release_notes: true
          prerelease: true
          files: artifacts/*.nupkg
          target_commitish: ${{ github.sha }}   # or 'dev'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Retrieve secrets from Bitwarden
        uses: bitwarden/sm-action@v2
        with:
          access_token: ${{ secrets.BW_ACCESS_TOKEN }}
          base_url: https://vault.bitwarden.eu
          secrets: |
            265b2fb6-2cf0-4859-9bc8-b24c00ab4378 > NUGET_API_KEY

      - name: Push package to NuGet
        run: |
          dotnet nuget push "artifacts/*.nupkg" --api-key "$NUGET_API_KEY" --source https://api.nuget.org/v3/index.json --skip-duplicate


